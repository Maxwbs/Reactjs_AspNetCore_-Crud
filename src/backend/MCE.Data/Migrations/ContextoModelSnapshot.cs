// <auto-generated />
using System;
using MCE.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MCE.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MCE.Domain.Entities.Endereco.EnderecoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ddd")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<Guid>("IdPessoaEndereco")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPessoaEndereco")
                        .IsUnique();

                    b.ToTable("MCE_ENDERECO");
                });

            modelBuilder.Entity("MCE.Domain.Entities.Membro.MembroEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CargoMinisterial")
                        .HasColumnType("int");

                    b.Property<int?>("Congregacao")
                        .HasColumnType("int")
                        .HasMaxLength(160);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("CredencialMinistro")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("DataBatismoAguas")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataBatismoEspiritoSanto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(160)")
                        .HasMaxLength(160);

                    b.Property<bool>("GerarCredencial")
                        .HasColumnType("bit");

                    b.Property<bool>("MembroEhAtivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MCE_MEMBRO");
                });

            modelBuilder.Entity("MCE.Domain.Entities.Parametrizacao.ParametrizacaoGeralEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("Imagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Tamanho")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MCE_PARAMETRIZACAOCREDENCIAL");
                });

            modelBuilder.Entity("MCE.Domain.Entities.Pessoa.PessoaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<Guid>("IdPessoaMembro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nacionalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naturalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(260)")
                        .HasMaxLength(260);

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasColumnType("nvarchar(260)")
                        .HasMaxLength(260);

                    b.Property<string>("NomePai")
                        .IsRequired()
                        .HasColumnType("nvarchar(260)")
                        .HasMaxLength(260);

                    b.Property<string>("OrgaoEmissorRg")
                        .HasColumnType("nvarchar(160)")
                        .HasMaxLength(160);

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPessoaMembro")
                        .IsUnique();

                    b.ToTable("MCE_PESSOA");
                });

            modelBuilder.Entity("MCE.Domain.Entities.Usuario.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UsuarioEntity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9503f79-3c21-49b6-8c43-407b3c8be6d4"),
                            CreateAt = new DateTime(2020, 12, 5, 16, 34, 58, 202, DateTimeKind.Local).AddTicks(176),
                            Email = "maxwbs@gmail.com",
                            Nome = "Administrador",
                            Senha = "1234",
                            UpdateAt = new DateTime(2020, 12, 5, 16, 34, 58, 203, DateTimeKind.Local).AddTicks(5289)
                        });
                });

            modelBuilder.Entity("MCE.Domain.Entities.Endereco.EnderecoEntity", b =>
                {
                    b.HasOne("MCE.Domain.Entities.Membro.MembroEntity", null)
                        .WithOne("Endereco")
                        .HasForeignKey("MCE.Domain.Entities.Endereco.EnderecoEntity", "IdPessoaEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCE.Domain.Entities.Pessoa.PessoaEntity", b =>
                {
                    b.HasOne("MCE.Domain.Entities.Membro.MembroEntity", null)
                        .WithOne("Pessoa")
                        .HasForeignKey("MCE.Domain.Entities.Pessoa.PessoaEntity", "IdPessoaMembro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
